com.googlecode.android.widgets.DateSlider.R -> com.googlecode.android.widgets.DateSlider.R:
    void <init>() -> <init>
com.googlecode.android.widgets.DateSlider.R$attr -> com.googlecode.android.widgets.DateSlider.R$attr:
    int childHeight -> childHeight
    int childWidth -> childWidth
    int labelerClass -> labelerClass
    int labelerFormat -> labelerFormat
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.googlecode.android.widgets.DateSlider.R$drawable -> com.googlecode.android.widgets.DateSlider.R$drawable:
    int icon -> icon
    int left_shadow -> left_shadow
    int right_shadow -> right_shadow
    int slider_back -> slider_back
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.googlecode.android.widgets.DateSlider.R$id -> com.googlecode.android.widgets.DateSlider.R$id:
    int alternativeDateSelectButton -> alternativeDateSelectButton
    int customDateSelectButton -> customDateSelectButton
    int dateSliderButLayout -> dateSliderButLayout
    int dateSliderCancelButton -> dateSliderCancelButton
    int dateSliderContainer -> dateSliderContainer
    int dateSliderOkButton -> dateSliderOkButton
    int dateSliderTitleText -> dateSliderTitleText
    int dateTimeSelectButton -> dateTimeSelectButton
    int defaultDateLimitSelectButton -> defaultDateLimitSelectButton
    int defaultDateSelectButton -> defaultDateSelectButton
    int monthYearDateSelectButton -> monthYearDateSelectButton
    int selectedDateLabel -> selectedDateLabel
    int timeLimitSelectButton -> timeLimitSelectButton
    int timeSelectButton -> timeSelectButton
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.googlecode.android.widgets.DateSlider.R$layout -> com.googlecode.android.widgets.DateSlider.R$layout:
    int altdateslider -> altdateslider
    int customdateslider -> customdateslider
    int datetimeslider -> datetimeslider
    int defaultdateslider -> defaultdateslider
    int dialogbuttons -> dialogbuttons
    int dialogtitle -> dialogtitle
    int main -> main
    int monthyeardateslider -> monthyeardateslider
    int simple_main -> simple_main
    int timeslider -> timeslider
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.googlecode.android.widgets.DateSlider.R$string -> com.googlecode.android.widgets.DateSlider.R$string:
    int app_name -> app_name
    int dateSliderTitle -> dateSliderTitle
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.googlecode.android.widgets.DateSlider.R$style -> com.googlecode.android.widgets.DateSlider.R$style:
    int Scroller -> Scroller
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.googlecode.android.widgets.DateSlider.R$styleable -> com.googlecode.android.widgets.DateSlider.R$styleable:
    int[] ScrollLayout -> ScrollLayout
    int ScrollLayout_android_gravity -> ScrollLayout_android_gravity
    int ScrollLayout_childHeight -> ScrollLayout_childHeight
    int ScrollLayout_childWidth -> ScrollLayout_childWidth
    int ScrollLayout_labelerClass -> ScrollLayout_labelerClass
    int ScrollLayout_labelerFormat -> ScrollLayout_labelerFormat
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.googlecode.android.widgets.DateSlider.ScrollLayout -> com.googlecode.android.widgets.DateSlider.ScrollLayout:
    android.widget.Scroller mScroller -> a
    boolean mDragMode -> b
    int childrenWidth -> c
    int mInitialOffset -> d
    int mLastX -> e
    int mLastScroll -> f
    int mScrollX -> g
    android.view.VelocityTracker mVelocityTracker -> h
    int mMinimumVelocity -> i
    int mMaximumVelocity -> j
    long currentTime -> k
    long minTime -> l
    long maxTime -> m
    int objWidth -> n
    int objHeight -> o
    int objGravity -> p
    android.graphics.drawable.Drawable rightShadow -> q
    android.graphics.drawable.Drawable leftShadow -> r
    com.googlecode.android.widgets.DateSlider.labeler.Labeler mLabeler -> s
    com.googlecode.android.widgets.DateSlider.ScrollLayout$OnScrollListener listener -> t
    com.googlecode.android.widgets.DateSlider.timeview.TimeView mCenterView -> u
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onFinishInflate() -> onFinishInflate
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void setMinTime(long) -> setMinTime
    void setMaxTime(long) -> setMaxTime
    void setTime(long) -> setTime
    void setMinuteInterval(int) -> setMinuteInterval
    void setTime(long,int) -> a
    void computeScroll() -> computeScroll
    void scrollTo(int,int) -> scrollTo
    void reScrollTo(int,int,boolean) -> a
    void moveElements(int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void fling(int) -> b
    void setOnScrollListener(com.googlecode.android.widgets.DateSlider.ScrollLayout$OnScrollListener) -> setOnScrollListener
com.googlecode.android.widgets.DateSlider.ScrollLayout$OnScrollListener -> com.googlecode.android.widgets.DateSlider.ScrollLayout$a:
    void onScroll(long) -> a
com.googlecode.android.widgets.DateSlider.SliderContainer -> com.googlecode.android.widgets.DateSlider.SliderContainer:
    java.util.Calendar mTime -> a
    com.googlecode.android.widgets.DateSlider.SliderContainer$OnTimeChangeListener mOnTimeChangeListener -> b
    int minuteInterval -> c
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onFinishInflate() -> onFinishInflate
    void setTime(java.util.Calendar) -> setTime
    java.util.Calendar getTime() -> getTime
    void setMinTime(java.util.Calendar) -> setMinTime
    void setMaxTime(java.util.Calendar) -> setMaxTime
    void setMinuteInterval(int) -> setMinuteInterval
    void setOnTimeChangeListener(com.googlecode.android.widgets.DateSlider.SliderContainer$OnTimeChangeListener) -> setOnTimeChangeListener
    void arrangeScrollers(com.googlecode.android.widgets.DateSlider.ScrollLayout) -> a
    java.util.Calendar access$000(com.googlecode.android.widgets.DateSlider.SliderContainer) -> a
    void access$100(com.googlecode.android.widgets.DateSlider.SliderContainer,com.googlecode.android.widgets.DateSlider.ScrollLayout) -> a
com.googlecode.android.widgets.DateSlider.SliderContainer$1 -> com.googlecode.android.widgets.DateSlider.SliderContainer$1:
    com.googlecode.android.widgets.DateSlider.ScrollLayout val$sl -> a
    com.googlecode.android.widgets.DateSlider.SliderContainer this$0 -> b
    void <init>(com.googlecode.android.widgets.DateSlider.SliderContainer,com.googlecode.android.widgets.DateSlider.ScrollLayout) -> <init>
    void onScroll(long) -> a
com.googlecode.android.widgets.DateSlider.SliderContainer$OnTimeChangeListener -> com.googlecode.android.widgets.DateSlider.SliderContainer$a:
    void onTimeChange(java.util.Calendar) -> a
com.googlecode.android.widgets.DateSlider.TimeObject -> com.googlecode.android.widgets.DateSlider.a:
    java.lang.CharSequence text -> a
    long startTime -> b
    long endTime -> c
    java.lang.String toString() -> toString
com.googlecode.android.widgets.DateSlider.labeler.Labeler -> com.googlecode.android.widgets.DateSlider.a.a:
    int viewWidthDP -> b
    int viewHeightDP -> c
    int minuteInterval -> a
    com.googlecode.android.widgets.DateSlider.TimeObject getElem(long) -> a
    com.googlecode.android.widgets.DateSlider.timeview.TimeView createView(android.content.Context,boolean) -> a
    com.googlecode.android.widgets.DateSlider.TimeObject add(long,int) -> a
    com.googlecode.android.widgets.DateSlider.TimeObject timeObjectfromCalendar(java.util.Calendar) -> a
    int getPreferredViewWidth(android.content.Context) -> a
    int getPreferredViewHeight(android.content.Context) -> b
    void setMinuteInterval(int) -> a
com.googlecode.android.widgets.DateSlider.timeview.TimeTextView -> com.googlecode.android.widgets.DateSlider.b.a:
    long endTime -> a
    long startTime -> b
    boolean isOutOfBounds -> c
    void <init>(android.content.Context,boolean,int) -> <init>
    void setupView(boolean,int) -> a
    void setVals(com.googlecode.android.widgets.DateSlider.TimeObject) -> setVals
    void setVals(com.googlecode.android.widgets.DateSlider.timeview.TimeView) -> setVals
    long getStartTime() -> getStartTime
    long getEndTime() -> getEndTime
    java.lang.String getTimeText() -> getTimeText
    boolean isOutOfBounds() -> a
    void setOutOfBounds(boolean) -> setOutOfBounds
com.googlecode.android.widgets.DateSlider.timeview.TimeView -> com.googlecode.android.widgets.DateSlider.b.b:
    void setVals(com.googlecode.android.widgets.DateSlider.TimeObject) -> setVals
    void setVals(com.googlecode.android.widgets.DateSlider.timeview.TimeView) -> setVals
    java.lang.String getTimeText() -> getTimeText
    long getStartTime() -> getStartTime
    long getEndTime() -> getEndTime
    boolean isOutOfBounds() -> a
    void setOutOfBounds(boolean) -> setOutOfBounds
    void setGravity(int) -> setGravity
